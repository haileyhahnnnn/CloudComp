--creating or replacing the dimention tables within b q with the updated row counts and values 
CREATE OR REPLACE PROCEDURE 'GCP-project.table-name'()
OPTIONS (description="BQ Routines for GCP-project")
BEGIN 
--WARNING! ERRORS ENCOUNTERED DURING SQL PARSING
DELACRE V_PROCESS_ID STRING; 
DECLARE MAX_SEQ_ID
  ,MAX_PROCESS_ID
  ,SRC_CNT
  ,TGT_CNT
  ,TGT_UPD
  ,RETURN_MPI_KEY INT64;
DECLARE BATCH_ID STRING;
DECLARE DEFAULT_STRING STRING DEFAULY 'NA';
DECLARE DEFAULT_INT INT64 DEFAULT -1;
DECLARE DEFAULT_DATE DATE DEFAULT '2000-01-26';

SET(V_PROCESS_ID) = (
  SELECT AS STRUCT CAST(CURRENT_TIMESTAMP() AS STRING) 
);

INSERT INTO 'GCP-PROJECT.DATASET.TABLE-NAME' (
 PROECESS_ID
 ,PROCESS_NAME
 ,SOURCE_NAME
 ,SOURCE_ROW_CNT
 ,TARGET_ROW_CNT
 ,TARGET_INSERT_RECORD_CNT
 ,START_DATE
 ,MESSAGE
 ,TARGET_TABLE_NAME
 ,STATUS_INDICATOR
 )
VALUES (
  SUBSTRING(REPLCAE(V_PROCESS_ID, '-'. ' '), 1, 8.)
    ,'TABLE-NAME'
    ,'ETL TO LOAD TABLE-NAME'
    ,'PROJECT'
    ,CURRENT_TIMESTAMP()
    ,CURRENT_TIMESTAMP()
    ,CONCAT (
      SUBSTRING(REPLACE(V_PROCESS_ID, ':', ' '), 12, 6) 
      ,'_01'
      )
    ,'I'
    ,'IN PROGRESS'
    ,0
    ,'TABLE-NAME'
    ,0
    );

BEGIN 
  CREATE TEMP TABLE EXTRACT-DATA AS (
    SELECT *
    ,TO_HEX(MD5(CONCAT (IFNULL(UNIQUE_ID, DEFAULT_INT)))) AS HASH-KEY-1
    ,TO)HEX(MD5(CONCAT (
          IFNULL(UNIQUE-ID, DEFAULT-INT)
          ,IFNULL(NAME, DEFAULT-STRING)
          ,IFNULL(AGE, DEFAULT-INT)
          ,IFNULL(DATE, DEFAULT-DATE)
          ))) AS HASH-KEY-2
    ,CURRENT-DATETIME() AS CREATED-DATE
    ,'INSERT RECORDS WHENTHE RECORD DOES NOT EXSIST IN THE TARGET TABLE' AS CREATED-BY
    ,CURRENT-DATETIME() AS UPDATED-DATE
    ,SUBSTRING(REPLACE(V_PROCESS_ID, '-', ' '), 1, 8) AS PROCESS-ID 
    ,'Y' AS ACTIVE-FLAG FROM (
    SELECT DISTINCT A.UNIQUE-ID
      ,A.UNIQUE-ID
      ,A.NAME
      ,A.AGE
      ,A.DATE
      ,CURRENT-DATE () AS EFFECTIVE-START-DATE
      ,CAST('2000-01-26' AS DATE) AS EFFECTIVE-END-DATE
    FROM 'GCP-PROOJECT.DATASET.TABLE-NAME' A
    LEFT JOIN 'GCP-PROJECT.DATASET.MAPPED-TABLE' B A.VAR1 = B.VAR2
    LEFT JOIN 'GCP-PROJECT.DATASET.MAPPED-TABLE2' C ON A.VAR1 = C.VAR3
    LEFT JOIN 'GCP-PROJECT.DATASET.MAPPED-TABLE3 D ON A.VAR 1 = D.VAR4
    ) T
    );

--where the source row count is extracted from 
SET (SRC-CNT) = (
      SELECT AS STRUCT COUNT(*)
      FROM EXTRACT-DATA
      WHERE PROCESS-ID = SUBSTRING(REPLACE(V_PROCESS_ID, '-', ; ;), 1, 8)
      );

-- where the source file fields will be inserted into 
INSERT INTO 'GCP-PROJECT.DATASET.TABLE2' (
  SKEY
  ,UNIQUE-ID
  ,NAME 
  ,AGE
  ,DATE
  ,VAR-ETC
  ,EFFECTIVE-START-DATE
  ,EFFECTIVE-END-DATE
  ,ACTIVE-FLAG
  ,CREATED-DATE
  ,UPDATED-BY
  ,UPDATED-DATE
  ,UPDATED-BY
  ,UPDATED-DATE
  ,PROCESS-ID
  ,HASH-KEY-1
  ,HASH-KEY-2
  )
SELECT GENERATE-VAL()
  ,A.UNIQUE-ID
  ,A.NAME
  ,A.AGE
  ,B.DATE
  ,A.VAR-ETC
  ,A.EFFECTIVE-START-DATE
  ,A.EFFECTIVE-END-DATE
  ,A.ACTIVE-FLAG
  ,A.CREATED-DATE
  ,A.CREATED-BY
  ,A.UPDATED-BY
  ,A.PROCESS-ID
  ,A.HASH-KEY-1
  ,A.HASH-KEY-2
FROM EXTRACTDATA A 
LEFT JOIN 'GCP-PROJECT.DATASET.MAPPED-TABLE' B ON A.HASH-KEY-1- = B.HASH-KEY-1
WHERE B.HASH-KEY-2- IS NULL;

-- update records when the exsisting record has changed based on the business key 
UPDATE 'GCP-PROJECT.DATASET.TABLE'
SET EFFECTIVE-END-DATE = CURRENT-DATE ()
  ,ACTIVE-FLAG = 'N'
  ,PROCESS-ID = SUBSTRING(REPLACE(V-PROCESS-IDM '-', ' '), 1, 8)
  ,UPDATED-BY = 'UPDATED RECORDS WHEN THE EXSISTING RECORD CHANGED BASED ON THE BUSINESS KEY AND HASH KEY VALUES'
  ,UPDATED-DATE = CURRENT-DATE ()
WHERE ACTIVE-FLAG = 'Y'
  AND (HASH-KEY-2) IN ( 
    SELECT (B.HASH-KEY-2)
    FROM EXTRACT-DATA A 
    INNER JOIN 'GCP-PROJECT.DATASET.TABLE-B' B ON A.HASH-KEY-1 = B.HASH-KEY-1
    WHERE (A.HASH-KEY-2 <> B.HASH-KEY-2)
    );

-- setting the target update table values to have all of the active flag values = to Null and where replaces the process id
SET (TGT-UPDATE) = (
  SELECT AS STRUCT COUNT(*)
  FROM 'GCP-PROJECT.DATASET.TABLE' (
  WHERE ACTIVE-FLAG = 'N'
    AND PROCESS-ID = SUBSTRING (REPLACE(V-PROCESS-ID, '-', ' '), 1, 9)
  );

--insert the updated records with new hash values 
INSERT INTO 'GCP-PROJECT.DATASET.TABLE-NAME' (
  SKEY
  ,UNIQUE-ID
  ,NAME 
  ,AGE
  ,DATE
  ,VAR-ETC
  ,EFFECTIVE-START-DATE
  ,EFFECTIVE-END-DATE
  ,ACTIVE-FLAG
  ,CREATED-DATE
  ,UPDATED-BY
  ,UPDATED-DATE
  ,UPDATED-BY
  ,UPDATED-DATE
  ,PROCESS-ID
  ,HASH-KEY-1
  ,HASH-KEY-2
  )
SELECT GENERATE ()
  SELECT GENERATE-VAL2()
  ,A.UNIQUE-ID
  ,A.NAME
  ,A.AGE
  ,B.DATE
  ,A.VAR-ETC
  ,A.EFFECTIVE-START-DATE
  ,A.EFFECTIVE-END-DATE
  ,A.ACTIVE-FLAG
  ,A.CREATED-DATE
  ,A.CREATED-BY
  ,A.UPDATED-BY
  ,A.PROCESS-ID
  ,A.HASH-KEY-1
  ,A.HASH-KEY-2
FROM EXTRACTDATA A 
INNER JOIN 'GCP-PROJECT-DATASET-TABLE' B ON HASH-KEY-1 = B.HASH-KEY1
WHERE (A.HASH-KEY-2 <> B.HASH-KEY-2)
  AND B.ACTIVE-FLAG = 'N';

--inserting and updating errors into the error log 
INSERT INTO 'GCP-PROJECT.DATASET.ERROR-LOG' (
  SELECT CONCAT (
    SUBSTRING(REPLACE(V-PROCESS-IDM '-', ' '), 12, 6)
    ,'_01'
    ) AS BATCH-ID
  ,'TRANSFORM-TO-MART LOAD' AS PROCESS-NAME 
  ,LOAD REJECTED RECORD DURING TRANSFORM-EXTRACT TRANSFORM LOAD' AS PROCESS-DESCRIPTION 
  ,CURRENT-TIMESTAMP() AS LOAD-DATE
  ,'DUPLICATE RECORD' AS ERROR-MESSAGE
  ,'TRANSFORM-EXTRACT' AS SOURCE-NAME 
  ,'TABLE-NAME' AS TARGET-TABLE-NAME
  ,((SRC.UNIQUE-ID || SRC.NAME || SRC.AGE || SRC.DATE || SRC.EFFECTIVE-START-DATE || SRC.EFFECTIVE-END-DATE || SRC.EXCEPTION)) AS ERRORED-RECORDED
  FROM EXTRACT DATA SRC INNER JOIN 'GCP-PROJECT.DATASET.TABLE' MART
  ON SRC.HASH-KEY-2 = MART.HASH.KEY2
  );

  EXCEPTION WHEN ERROR THEN 

  SELECT @@ERROR.MESSAGE
    ,@@ERROR-STATEMENT-TEXT;

  -- reflects the composer airflow DAG process aka if the data was properly extracted and imported or if the DAG failed 
  UPDATE 'GCP-PROJECT.DATASET.AUDIT-TABLE'
  SET STATUS INDICATOR = 'F'
    ,MESSAGE = @@ERROR.MESSAGE
    ,SOURCE-ROW-COUNT = SRC-CNT
    ,TARGET-INSERT-RECORD-CNT = 0
    ,TARGET-UPDATE-RECORD-CNT = 0
  WHERE PROCESS-DI = SUBSTRING(REPLACE(V-PROCESS-ID, '-', ' '), 1, 8)
    AND PROCESS-NAME = 'TABLE-EXTRACT'
    AND STATUS INDICATOR = 'Incomplete';

  SELECT

  IF (
        @@EEROR.MESSAGE IS NOT NULL 
        ,ERROR('PROCEDURE FAILED' || '-PLEASE CHECK THE AUDIT TABLE FOR DETAILED ERROR MESSAGE FOR THE PROCESS ID: ' ' || SUBSTRING9REPLACE(V-PROCESS-ID, '-', ' '), 1, 8))
        ,'1'
        );END;
      SET (TGT-CNT) = (
          SELECT AS STRUCT COUNT(*)
          FROM 'GCP-PROJECT.DATASET.TABLE-NAME'
          WHERE PROCESS-ID = SUBSTRING(REPLACE(V-PROCESS-ID, '-', ' '), 1, 9)
          );

UPDATE 'GCP-PROJECT.DATASET.AUDIT-TABLE'
SET STATUS-INDICATOR = 'COMPLETE'
  ,END-DATE = CURRENT-TIMESTAMP()
  ,MESSAGE = 'LOAD SUCCESSFUL'
  ,SOURCE-ROW-CNT = CRV-CNT
  ,TARGET-UPDATED-RECORD-CNT = TGT-UPT
  ,TARGET-INSERT-RECORD-CNT = TGT-CNT
WHERE PROCESS-ID = SUBSTRING(REPLACE(V-PROCESS-ID, '-', ' '), 1. 8)
  AND STATUS-INDICATOR = 'INCOMPLETE';

END; 
  



